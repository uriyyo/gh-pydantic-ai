[project]
name = "gh-pydantic-ai"
version = "0.1.0"
description = "GitHub Copilot Provider for Pydantic AI"
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
    "click>=8.2.1",
    "httpx>=0.28.1",
    "pydantic-ai>=0.2.19",
]

[project.scripts]
gh-clai = "gh_pydantic_ai.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "ruff>=0.12.1",
]

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = [
    "ALL",  # select all checks by default
]
ignore = [
    # single rule exclude
    "TRY003",  # allow long exc message
    "COM812",  # will be handled by formatting

    # full rule exclude
    "D",   # ignore docstrings
    "FA",  # ignore future annotations
    "ANN", # ignore annotations
    "FIX", # ignore FIXMEs
    "TD",  # ignore all TODOs
    "ARG", # ignore unused arguments
    "FBT", # ignore flake8-boolean-trap
    "EM",  # ignore error message formatting
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]
per-file-ignores = { }
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.13"
strict = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_reexport = false
show_column_numbers = true
show_error_codes = true
